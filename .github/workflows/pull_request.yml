name: Pull Request CI

on:
  pull_request:
    branches: [master]

concurrency:
  group: pr_${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  pr_lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore npm cache
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Restore node_modules cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: |
            node_modules
            client/node_modules
            server/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Format & Lint (npm run ci:lint && npm run ci:format)
        run: |
          npm run ci:format
          npm run ci:lint

  pr_build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore npm cache
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Restore node_modules cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: |
            node_modules
            client/node_modules
            server/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Build (npm run ci:build)
        run: |
          npm run ci:build

  pr_test:
    name: Test
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore npm cache
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Restore node_modules cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: |
            node_modules
            client/node_modules
            server/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Test (client)
        run: npm run test:ci
        working-directory: client

      - name: Test (server)
        run: npm run test:ci
        if: success() || failure()
        working-directory: server

      - name: Upload test report (client)
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-report-client
          path: reports/jest-junit-client.xml

      - name: Upload test report (server)
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-report-server
          path: reports/jest-junit-server.xml

  pr_auto_label:
    name: Auto Label
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Auto Label
        uses: banyan/auto-label@1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

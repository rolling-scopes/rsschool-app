// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EducationCard Should render correctly if "educationHistory" has element with "null" values 1`] = `
<EducationCard
  data={
    Object {
      "educationHistory": Array [
        Object {
          "faculty": null,
          "graduationYear": null,
          "university": null,
        },
      ],
    }
  }
  isEditingModeEnabled={true}
  onPermissionsSettingsChange={[MockFunction]}
  onProfileSettingsChange={[MockFunction]}
>
  <CommonCard
    content={
      <List
        dataSource={
          Array [
            Object {
              "faculty": null,
              "graduationYear": null,
              "university": null,
            },
          ]
        }
        itemLayout="horizontal"
        renderItem={[Function]}
      />
    }
    icon={<ForwardRef(ReadOutlined) />}
    isEditingModeEnabled={true}
    noDataDescrption="Education history isn't filled in"
    onPermissionsSettingsChange={[MockFunction]}
    profileSettingsContent={
      <React.Fragment>
        <List
          dataSource={
            Array [
              Object {
                "faculty": null,
                "graduationYear": null,
                "university": null,
              },
            ]
          }
          itemLayout="horizontal"
          renderItem={[Function]}
        />
        <Button
          onClick={[Function]}
          style={
            Object {
              "width": "100%",
            }
          }
          type="dashed"
        >
          <ForwardRef(FileAddOutlined) />
           Add new university
        </Button>
      </React.Fragment>
    }
    title="Education"
  >
    <ForwardRef
      actions={
        Array [
          <ForwardRef(EditOutlined)
            onClick={[Function]}
          />,
        ]
      }
      title={
        <Title
          ellipsis={true}
          level={2}
          style={
            Object {
              "fontSize": 16,
              "marginBottom": 0,
            }
          }
        >
          <ForwardRef(ReadOutlined) />
           
          Education
        </Title>
      }
    >
      <div
        className="ant-card ant-card-bordered"
      >
        <div
          className="ant-card-head"
          style={Object {}}
        >
          <div
            className="ant-card-head-wrapper"
          >
            <div
              className="ant-card-head-title"
            >
              <Title
                ellipsis={true}
                level={2}
                style={
                  Object {
                    "fontSize": 16,
                    "marginBottom": 0,
                  }
                }
              >
                <ForwardRef
                  component="h2"
                  ellipsis={true}
                  style={
                    Object {
                      "fontSize": 16,
                      "marginBottom": 0,
                    }
                  }
                >
                  <ResizeObserver
                    disabled={true}
                    onResize={[Function]}
                  >
                    <SingleObserver
                      disabled={true}
                      key="rc-observer-key-0"
                      onResize={[Function]}
                    >
                      <DomWrapper>
                        <EllipsisTooltip
                          enabledEllipsis={true}
                          isEllipsis={false}
                        >
                          <Typography
                            className="ant-typography-ellipsis ant-typography-single-line ant-typography-ellipsis-single-line"
                            component="h2"
                            onClick={null}
                            style={
                              Object {
                                "WebkitLineClamp": undefined,
                                "fontSize": 16,
                                "marginBottom": 0,
                              }
                            }
                          >
                            <h2
                              className="ant-typography ant-typography-ellipsis ant-typography-single-line ant-typography-ellipsis-single-line"
                              onClick={null}
                              style={
                                Object {
                                  "WebkitLineClamp": undefined,
                                  "fontSize": 16,
                                  "marginBottom": 0,
                                }
                              }
                            >
                              <Ellipsis
                                enabledMeasure={false}
                                onEllipsis={[Function]}
                                rows={1}
                                text={
                                  Array [
                                    <ForwardRef(ReadOutlined) />,
                                    " ",
                                    "Education",
                                  ]
                                }
                                width={0}
                              >
                                <ForwardRef(ReadOutlined)>
                                  <AntdIcon
                                    icon={
                                      Object {
                                        "icon": Object {
                                          "attrs": Object {
                                            "focusable": "false",
                                            "viewBox": "64 64 896 896",
                                          },
                                          "children": Array [
                                            Object {
                                              "attrs": Object {
                                                "d": "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z",
                                              },
                                              "tag": "path",
                                            },
                                          ],
                                          "tag": "svg",
                                        },
                                        "name": "read",
                                        "theme": "outlined",
                                      }
                                    }
                                  >
                                    <span
                                      aria-label="read"
                                      className="anticon anticon-read"
                                      role="img"
                                    >
                                      <IconReact
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "read",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden="true"
                                          data-icon="read"
                                          fill="currentColor"
                                          focusable="false"
                                          height="1em"
                                          key="svg-read"
                                          viewBox="64 64 896 896"
                                          width="1em"
                                        >
                                          <path
                                            d="M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z"
                                            key="svg-read-svg-0"
                                          />
                                        </svg>
                                      </IconReact>
                                    </span>
                                  </AntdIcon>
                                </ForwardRef(ReadOutlined)>
                                 
                                Education
                              </Ellipsis>
                            </h2>
                          </Typography>
                        </EllipsisTooltip>
                      </DomWrapper>
                    </SingleObserver>
                  </ResizeObserver>
                </ForwardRef>
              </Title>
            </div>
          </div>
        </div>
        <div
          className="ant-card-body"
          style={Object {}}
        >
          <List
            dataSource={
              Array [
                Object {
                  "faculty": null,
                  "graduationYear": null,
                  "university": null,
                },
              ]
            }
            itemLayout="horizontal"
            renderItem={[Function]}
          >
            <div
              className="ant-list ant-list-split"
            >
              <Spin
                size="default"
                spinning={false}
                wrapperClassName=""
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <ul
                      className="ant-list-items"
                    >
                      <Item>
                        <li
                          className="ant-list-item"
                        >
                          <p>
                            (Empty)
                          </p>
                        </li>
                      </Item>
                    </ul>
                  </div>
                </div>
              </Spin>
            </div>
          </List>
          <PermissionsSettingsDrawer
            hideSettings={[Function]}
            isSettingsVisible={false}
            onPermissionsSettingsChange={[MockFunction]}
          >
            <DrawerWrapper
              closable={true}
              getContainer={false}
              onClose={[Function]}
              placement="top"
              style={
                Object {
                  "display": "none",
                  "position": "absolute",
                }
              }
              title="Visibility settings"
              visible={false}
            >
              <Drawer
                closable={true}
                getContainer={false}
                onClose={[Function]}
                placement="top"
                prefixCls="ant-drawer"
                style={
                  Object {
                    "display": "none",
                    "position": "absolute",
                  }
                }
                title="Visibility settings"
                visible={false}
              >
                <DrawerWrapper
                  afterVisibleChange={[Function]}
                  autoFocus={true}
                  className=""
                  defaultOpen={false}
                  duration=".3s"
                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                  forceRender={false}
                  getContainer={false}
                  handler={false}
                  height={378}
                  keyboard={true}
                  level={null}
                  maskClosable={true}
                  maskStyle={Object {}}
                  onChange={[Function]}
                  onClose={[Function]}
                  open={false}
                  placement="top"
                  prefixCls="ant-drawer"
                  showMask={true}
                  style={
                    Object {
                      "display": "none",
                      "position": "absolute",
                      "transform": undefined,
                      "zIndex": undefined,
                    }
                  }
                  wrapperClassName=""
                >
                  <div
                    className=""
                  >
                    <DrawerChild
                      afterVisibleChange={[Function]}
                      autoFocus={true}
                      className=""
                      duration=".3s"
                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                      getContainer={[Function]}
                      handler={false}
                      height={378}
                      keyboard={true}
                      level={null}
                      maskClosable={true}
                      maskStyle={Object {}}
                      onChange={[Function]}
                      onClose={[Function]}
                      onHandleClick={[Function]}
                      open={false}
                      placement="top"
                      prefixCls="ant-drawer"
                      showMask={true}
                      style={
                        Object {
                          "display": "none",
                          "position": "absolute",
                          "transform": undefined,
                          "zIndex": undefined,
                        }
                      }
                    >
                      <div
                        className="ant-drawer ant-drawer-top"
                        onTransitionEnd={[Function]}
                        style={
                          Object {
                            "display": "none",
                            "position": "absolute",
                            "transform": undefined,
                            "zIndex": undefined,
                          }
                        }
                        tabIndex={-1}
                      >
                        <div
                          className="ant-drawer-mask"
                          onClick={[Function]}
                          style={Object {}}
                        />
                        <div
                          className="ant-drawer-content-wrapper"
                          style={
                            Object {
                              "height": "378px",
                              "msTransform": "translateY(-100%)",
                              "transform": "translateY(-100%)",
                              "width": undefined,
                            }
                          }
                        >
                          <div
                            className="ant-drawer-content"
                          >
                            <div
                              className="ant-drawer-wrapper-body"
                              onTransitionEnd={[Function]}
                              style={Object {}}
                            >
                              <div
                                className="ant-drawer-header"
                              >
                                <div
                                  className="ant-drawer-header-title"
                                >
                                  <button
                                    aria-label="Close"
                                    className="ant-drawer-close"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ForwardRef(CloseOutlined)>
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "close",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="close"
                                          className="anticon anticon-close"
                                          role="img"
                                        >
                                          <IconReact
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "close",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              data-icon="close"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-close"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                key="svg-close-svg-0"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(CloseOutlined)>
                                  </button>
                                  <div
                                    className="ant-drawer-title"
                                  >
                                    Visibility settings
                                  </div>
                                </div>
                              </div>
                              <div
                                className="ant-drawer-body"
                              >
                                <List
                                  dataSource={Array []}
                                  itemLayout="horizontal"
                                  renderItem={[Function]}
                                >
                                  <div
                                    className="ant-list ant-list-split"
                                  >
                                    <Spin
                                      size="default"
                                      spinning={false}
                                      wrapperClassName=""
                                    >
                                      <div
                                        className="ant-spin-nested-loading"
                                      >
                                        <div
                                          className="ant-spin-container"
                                          key="container"
                                        >
                                          <div
                                            className="ant-list-empty-text"
                                          >
                                            <Empty
                                              image={<Simple />}
                                            >
                                              <LocaleReceiver
                                                componentName="Empty"
                                              >
                                                <div
                                                  className="ant-empty ant-empty-normal"
                                                >
                                                  <div
                                                    className="ant-empty-image"
                                                  >
                                                    <Simple>
                                                      <svg
                                                        className="ant-empty-img-simple"
                                                        height="41"
                                                        viewBox="0 0 64 41"
                                                        width="64"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <g
                                                          fill="none"
                                                          fillRule="evenodd"
                                                          transform="translate(0 1)"
                                                        >
                                                          <ellipse
                                                            className="ant-empty-img-simple-ellipse"
                                                            cx="32"
                                                            cy="33"
                                                            rx="32"
                                                            ry="7"
                                                          />
                                                          <g
                                                            className="ant-empty-img-simple-g"
                                                            fillRule="nonzero"
                                                          >
                                                            <path
                                                              d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                            />
                                                            <path
                                                              className="ant-empty-img-simple-path"
                                                              d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                            />
                                                          </g>
                                                        </g>
                                                      </svg>
                                                    </Simple>
                                                  </div>
                                                  <div
                                                    className="ant-empty-description"
                                                  >
                                                    No Data
                                                  </div>
                                                </div>
                                              </LocaleReceiver>
                                            </Empty>
                                          </div>
                                        </div>
                                      </div>
                                    </Spin>
                                  </div>
                                </List>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </DrawerChild>
                  </div>
                </DrawerWrapper>
              </Drawer>
            </DrawerWrapper>
            <style
              jsx={true}
            >
              
        :global(.ant-drawer-content-wrapper) {
          height: inherit !important;
        }

        :global(.ant-drawer-wrapper-body) {
          overflow: hidden;
        }

        :global(.ant-drawer-body) {
          height: calc(100% - 55px);
          overflow: auto;
        }
      
            </style>
          </PermissionsSettingsDrawer>
          <ProfileSettingsDrawer
            content={
              <React.Fragment>
                <List
                  dataSource={
                    Array [
                      Object {
                        "faculty": null,
                        "graduationYear": null,
                        "university": null,
                      },
                    ]
                  }
                  itemLayout="horizontal"
                  renderItem={[Function]}
                />
                <Button
                  onClick={[Function]}
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                  type="dashed"
                >
                  <ForwardRef(FileAddOutlined) />
                   Add new university
                </Button>
              </React.Fragment>
            }
            hideSettings={[Function]}
            isSettingsVisible={false}
          >
            <DrawerWrapper
              closable={true}
              getContainer={false}
              onClose={[Function]}
              placement="top"
              style={
                Object {
                  "display": "none",
                  "position": "absolute",
                }
              }
              title="Profile settings"
              visible={false}
            >
              <Drawer
                closable={true}
                getContainer={false}
                onClose={[Function]}
                placement="top"
                prefixCls="ant-drawer"
                style={
                  Object {
                    "display": "none",
                    "position": "absolute",
                  }
                }
                title="Profile settings"
                visible={false}
              >
                <DrawerWrapper
                  afterVisibleChange={[Function]}
                  autoFocus={true}
                  className=""
                  defaultOpen={false}
                  duration=".3s"
                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                  forceRender={false}
                  getContainer={false}
                  handler={false}
                  height={378}
                  keyboard={true}
                  level={null}
                  maskClosable={true}
                  maskStyle={Object {}}
                  onChange={[Function]}
                  onClose={[Function]}
                  open={false}
                  placement="top"
                  prefixCls="ant-drawer"
                  showMask={true}
                  style={
                    Object {
                      "display": "none",
                      "position": "absolute",
                      "transform": undefined,
                      "zIndex": undefined,
                    }
                  }
                  wrapperClassName=""
                >
                  <div
                    className=""
                  >
                    <DrawerChild
                      afterVisibleChange={[Function]}
                      autoFocus={true}
                      className=""
                      duration=".3s"
                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                      getContainer={[Function]}
                      handler={false}
                      height={378}
                      keyboard={true}
                      level={null}
                      maskClosable={true}
                      maskStyle={Object {}}
                      onChange={[Function]}
                      onClose={[Function]}
                      onHandleClick={[Function]}
                      open={false}
                      placement="top"
                      prefixCls="ant-drawer"
                      showMask={true}
                      style={
                        Object {
                          "display": "none",
                          "position": "absolute",
                          "transform": undefined,
                          "zIndex": undefined,
                        }
                      }
                    >
                      <div
                        className="ant-drawer ant-drawer-top"
                        onTransitionEnd={[Function]}
                        style={
                          Object {
                            "display": "none",
                            "position": "absolute",
                            "transform": undefined,
                            "zIndex": undefined,
                          }
                        }
                        tabIndex={-1}
                      >
                        <div
                          className="ant-drawer-mask"
                          onClick={[Function]}
                          style={Object {}}
                        />
                        <div
                          className="ant-drawer-content-wrapper"
                          style={
                            Object {
                              "height": "378px",
                              "msTransform": "translateY(-100%)",
                              "transform": "translateY(-100%)",
                              "width": undefined,
                            }
                          }
                        >
                          <div
                            className="ant-drawer-content"
                          >
                            <div
                              className="ant-drawer-wrapper-body"
                              onTransitionEnd={[Function]}
                              style={Object {}}
                            >
                              <div
                                className="ant-drawer-header"
                              >
                                <div
                                  className="ant-drawer-header-title"
                                >
                                  <button
                                    aria-label="Close"
                                    className="ant-drawer-close"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ForwardRef(CloseOutlined)>
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "close",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="close"
                                          className="anticon anticon-close"
                                          role="img"
                                        >
                                          <IconReact
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "close",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              data-icon="close"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-close"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                key="svg-close-svg-0"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(CloseOutlined)>
                                  </button>
                                  <div
                                    className="ant-drawer-title"
                                  >
                                    Profile settings
                                  </div>
                                </div>
                              </div>
                              <div
                                className="ant-drawer-body"
                              >
                                <List
                                  dataSource={
                                    Array [
                                      Object {
                                        "faculty": null,
                                        "graduationYear": null,
                                        "university": null,
                                      },
                                    ]
                                  }
                                  itemLayout="horizontal"
                                  renderItem={[Function]}
                                >
                                  <div
                                    className="ant-list ant-list-split"
                                  >
                                    <Spin
                                      size="default"
                                      spinning={false}
                                      wrapperClassName=""
                                    >
                                      <div
                                        className="ant-spin-nested-loading"
                                      >
                                        <div
                                          className="ant-spin-container"
                                          key="container"
                                        >
                                          <ul
                                            className="ant-list-items"
                                          >
                                            <Item>
                                              <li
                                                className="ant-list-item"
                                              >
                                                <div
                                                  style={
                                                    Object {
                                                      "width": "100%",
                                                    }
                                                  }
                                                >
                                                  <p
                                                    style={
                                                      Object {
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    (Empty)
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <Button
                                                      onClick={[Function]}
                                                      size="small"
                                                      type="dashed"
                                                    >
                                                      <Wave
                                                        disabled={false}
                                                      >
                                                        <button
                                                          className="ant-btn ant-btn-dashed ant-btn-sm"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <ForwardRef(DeleteOutlined)
                                                            key=".0"
                                                          >
                                                            <AntdIcon
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "delete",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="delete"
                                                                className="anticon anticon-delete"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "delete",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    data-icon="delete"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-delete"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                      key="svg-delete-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DeleteOutlined)>
                                                          <span
                                                            key=".1"
                                                          >
                                                             Delete
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    <Text
                                                      strong={true}
                                                    >
                                                      <ForwardRef
                                                        component="span"
                                                        strong={true}
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <SingleObserver
                                                            disabled={true}
                                                            key="rc-observer-key-0"
                                                            onResize={[Function]}
                                                          >
                                                            <DomWrapper>
                                                              <EllipsisTooltip
                                                                enabledEllipsis={false}
                                                                isEllipsis={false}
                                                              >
                                                                <Typography
                                                                  className=""
                                                                  component="span"
                                                                  onClick={null}
                                                                  style={
                                                                    Object {
                                                                      "WebkitLineClamp": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-typography"
                                                                    onClick={null}
                                                                    style={
                                                                      Object {
                                                                        "WebkitLineClamp": undefined,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Ellipsis
                                                                      enabledMeasure={false}
                                                                      onEllipsis={[Function]}
                                                                      rows={1}
                                                                      text="University:"
                                                                      width={0}
                                                                    >
                                                                      <strong>
                                                                        University:
                                                                      </strong>
                                                                    </Ellipsis>
                                                                  </span>
                                                                </Typography>
                                                              </EllipsisTooltip>
                                                            </DomWrapper>
                                                          </SingleObserver>
                                                        </ResizeObserver>
                                                      </ForwardRef>
                                                    </Text>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                      value={null}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value={null}
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                              type="text"
                                                              value={null}
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value=""
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    <Text
                                                      strong={true}
                                                    >
                                                      <ForwardRef
                                                        component="span"
                                                        strong={true}
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <SingleObserver
                                                            disabled={true}
                                                            key="rc-observer-key-0"
                                                            onResize={[Function]}
                                                          >
                                                            <DomWrapper>
                                                              <EllipsisTooltip
                                                                enabledEllipsis={false}
                                                                isEllipsis={false}
                                                              >
                                                                <Typography
                                                                  className=""
                                                                  component="span"
                                                                  onClick={null}
                                                                  style={
                                                                    Object {
                                                                      "WebkitLineClamp": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-typography"
                                                                    onClick={null}
                                                                    style={
                                                                      Object {
                                                                        "WebkitLineClamp": undefined,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Ellipsis
                                                                      enabledMeasure={false}
                                                                      onEllipsis={[Function]}
                                                                      rows={1}
                                                                      text="Faculty"
                                                                      width={0}
                                                                    >
                                                                      <strong>
                                                                        Faculty
                                                                      </strong>
                                                                    </Ellipsis>
                                                                  </span>
                                                                </Typography>
                                                              </EllipsisTooltip>
                                                            </DomWrapper>
                                                          </SingleObserver>
                                                        </ResizeObserver>
                                                      </ForwardRef>
                                                    </Text>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                      value={null}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value={null}
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                              type="text"
                                                              value={null}
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value=""
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    <Text
                                                      strong={true}
                                                    >
                                                      <ForwardRef
                                                        component="span"
                                                        strong={true}
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <SingleObserver
                                                            disabled={true}
                                                            key="rc-observer-key-0"
                                                            onResize={[Function]}
                                                          >
                                                            <DomWrapper>
                                                              <EllipsisTooltip
                                                                enabledEllipsis={false}
                                                                isEllipsis={false}
                                                              >
                                                                <Typography
                                                                  className=""
                                                                  component="span"
                                                                  onClick={null}
                                                                  style={
                                                                    Object {
                                                                      "WebkitLineClamp": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-typography"
                                                                    onClick={null}
                                                                    style={
                                                                      Object {
                                                                        "WebkitLineClamp": undefined,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Ellipsis
                                                                      enabledMeasure={false}
                                                                      onEllipsis={[Function]}
                                                                      rows={1}
                                                                      text="Graduation year:"
                                                                      width={0}
                                                                    >
                                                                      <strong>
                                                                        Graduation year:
                                                                      </strong>
                                                                    </Ellipsis>
                                                                  </span>
                                                                </Typography>
                                                              </EllipsisTooltip>
                                                            </DomWrapper>
                                                          </SingleObserver>
                                                        </ResizeObserver>
                                                      </ForwardRef>
                                                    </Text>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                      value={null}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value={null}
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                              type="text"
                                                              value={null}
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value=""
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            type="text"
                                                            value=""
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </p>
                                                </div>
                                              </li>
                                            </Item>
                                          </ul>
                                        </div>
                                      </div>
                                    </Spin>
                                  </div>
                                </List>
                                <Button
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                  type="dashed"
                                >
                                  <Wave
                                    disabled={false}
                                  >
                                    <button
                                      className="ant-btn ant-btn-dashed"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                      type="button"
                                    >
                                      <LoadingIcon
                                        existIcon={false}
                                        loading={false}
                                        prefixCls="ant-btn"
                                      >
                                        <CSSMotion
                                          motionName="ant-btn-loading-icon-motion"
                                          onAppearActive={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </LoadingIcon>
                                      <ForwardRef(FileAddOutlined)
                                        key=".0"
                                      >
                                        <AntdIcon
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "file-add",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <span
                                            aria-label="file-add"
                                            className="anticon anticon-file-add"
                                            role="img"
                                          >
                                            <IconReact
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "file-add",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                data-icon="file-add"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-file-add"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z"
                                                  key="svg-file-add-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </span>
                                        </AntdIcon>
                                      </ForwardRef(FileAddOutlined)>
                                      <span
                                        key=".1"
                                      >
                                         Add new university
                                      </span>
                                    </button>
                                  </Wave>
                                </Button>
                                <style
                                  jsx={true}
                                >
                                  
              :global(.ant-drawer-content-wrapper) {
                height: inherit !important;
              }

              :global(.ant-drawer-wrapper-body) {
                overflow: hidden;
              }

              :global(.ant-drawer-body) {
                height: calc(100% - 55px);
                overflow: auto;
              }
            
                                </style>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </DrawerChild>
                  </div>
                </DrawerWrapper>
              </Drawer>
            </DrawerWrapper>
          </ProfileSettingsDrawer>
        </div>
        <ul
          className="ant-card-actions"
        >
          <li
            key="action-0"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <span>
              <ForwardRef(EditOutlined)
                key="main-card-actions-edit"
                onClick={[Function]}
              >
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "edit",
                      "theme": "outlined",
                    }
                  }
                  onClick={[Function]}
                >
                  <span
                    aria-label="edit"
                    className="anticon anticon-edit"
                    onClick={[Function]}
                    role="img"
                    tabIndex={-1}
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "edit",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="edit"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-edit"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                          key="svg-edit-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(EditOutlined)>
            </span>
          </li>
        </ul>
      </div>
    </ForwardRef>
  </CommonCard>
</EducationCard>
`;

exports[`EducationCard Should render correctly if "educationHistory" is empty 1`] = `
<CommonCard
  icon={<ForwardRef(ReadOutlined) />}
  isEditingModeEnabled={false}
  noDataDescrption="Education history isn't filled in"
  onPermissionsSettingsChange={[MockFunction]}
  profileSettingsContent={
    <React.Fragment>
      <List
        dataSource={Array []}
        itemLayout="horizontal"
        renderItem={[Function]}
      />
      <Button
        onClick={[Function]}
        style={
          Object {
            "width": "100%",
          }
        }
        type="dashed"
      >
        <ForwardRef(FileAddOutlined) />
         Add new university
      </Button>
    </React.Fragment>
  }
  title="Education"
/>
`;

exports[`EducationCard Should render correctly if editing mode is disabled 1`] = `
<EducationCard
  data={
    Object {
      "educationHistory": Array [
        Object {
          "faculty": "POIT",
          "graduationYear": 2002,
          "university": "MIT",
        },
      ],
    }
  }
  isEditingModeEnabled={false}
  onPermissionsSettingsChange={[MockFunction]}
  onProfileSettingsChange={[MockFunction]}
>
  <CommonCard
    content={
      <List
        dataSource={
          Array [
            Object {
              "faculty": "POIT",
              "graduationYear": 2002,
              "university": "MIT",
            },
          ]
        }
        itemLayout="horizontal"
        renderItem={[Function]}
      />
    }
    icon={<ForwardRef(ReadOutlined) />}
    isEditingModeEnabled={false}
    noDataDescrption="Education history isn't filled in"
    onPermissionsSettingsChange={[MockFunction]}
    profileSettingsContent={
      <React.Fragment>
        <List
          dataSource={
            Array [
              Object {
                "faculty": "POIT",
                "graduationYear": 2002,
                "university": "MIT",
              },
            ]
          }
          itemLayout="horizontal"
          renderItem={[Function]}
        />
        <Button
          onClick={[Function]}
          style={
            Object {
              "width": "100%",
            }
          }
          type="dashed"
        >
          <ForwardRef(FileAddOutlined) />
           Add new university
        </Button>
      </React.Fragment>
    }
    title="Education"
  >
    <ForwardRef
      title={
        <Title
          ellipsis={true}
          level={2}
          style={
            Object {
              "fontSize": 16,
              "marginBottom": 0,
            }
          }
        >
          <ForwardRef(ReadOutlined) />
           
          Education
        </Title>
      }
    >
      <div
        className="ant-card ant-card-bordered"
      >
        <div
          className="ant-card-head"
          style={Object {}}
        >
          <div
            className="ant-card-head-wrapper"
          >
            <div
              className="ant-card-head-title"
            >
              <Title
                ellipsis={true}
                level={2}
                style={
                  Object {
                    "fontSize": 16,
                    "marginBottom": 0,
                  }
                }
              >
                <ForwardRef
                  component="h2"
                  ellipsis={true}
                  style={
                    Object {
                      "fontSize": 16,
                      "marginBottom": 0,
                    }
                  }
                >
                  <ResizeObserver
                    disabled={true}
                    onResize={[Function]}
                  >
                    <SingleObserver
                      disabled={true}
                      key="rc-observer-key-0"
                      onResize={[Function]}
                    >
                      <DomWrapper>
                        <EllipsisTooltip
                          enabledEllipsis={true}
                          isEllipsis={false}
                        >
                          <Typography
                            className="ant-typography-ellipsis ant-typography-single-line ant-typography-ellipsis-single-line"
                            component="h2"
                            onClick={null}
                            style={
                              Object {
                                "WebkitLineClamp": undefined,
                                "fontSize": 16,
                                "marginBottom": 0,
                              }
                            }
                          >
                            <h2
                              className="ant-typography ant-typography-ellipsis ant-typography-single-line ant-typography-ellipsis-single-line"
                              onClick={null}
                              style={
                                Object {
                                  "WebkitLineClamp": undefined,
                                  "fontSize": 16,
                                  "marginBottom": 0,
                                }
                              }
                            >
                              <Ellipsis
                                enabledMeasure={false}
                                onEllipsis={[Function]}
                                rows={1}
                                text={
                                  Array [
                                    <ForwardRef(ReadOutlined) />,
                                    " ",
                                    "Education",
                                  ]
                                }
                                width={0}
                              >
                                <ForwardRef(ReadOutlined)>
                                  <AntdIcon
                                    icon={
                                      Object {
                                        "icon": Object {
                                          "attrs": Object {
                                            "focusable": "false",
                                            "viewBox": "64 64 896 896",
                                          },
                                          "children": Array [
                                            Object {
                                              "attrs": Object {
                                                "d": "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z",
                                              },
                                              "tag": "path",
                                            },
                                          ],
                                          "tag": "svg",
                                        },
                                        "name": "read",
                                        "theme": "outlined",
                                      }
                                    }
                                  >
                                    <span
                                      aria-label="read"
                                      className="anticon anticon-read"
                                      role="img"
                                    >
                                      <IconReact
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "read",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden="true"
                                          data-icon="read"
                                          fill="currentColor"
                                          focusable="false"
                                          height="1em"
                                          key="svg-read"
                                          viewBox="64 64 896 896"
                                          width="1em"
                                        >
                                          <path
                                            d="M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z"
                                            key="svg-read-svg-0"
                                          />
                                        </svg>
                                      </IconReact>
                                    </span>
                                  </AntdIcon>
                                </ForwardRef(ReadOutlined)>
                                 
                                Education
                              </Ellipsis>
                            </h2>
                          </Typography>
                        </EllipsisTooltip>
                      </DomWrapper>
                    </SingleObserver>
                  </ResizeObserver>
                </ForwardRef>
              </Title>
            </div>
          </div>
        </div>
        <div
          className="ant-card-body"
          style={Object {}}
        >
          <List
            dataSource={
              Array [
                Object {
                  "faculty": "POIT",
                  "graduationYear": 2002,
                  "university": "MIT",
                },
              ]
            }
            itemLayout="horizontal"
            renderItem={[Function]}
          >
            <div
              className="ant-list ant-list-split"
            >
              <Spin
                size="default"
                spinning={false}
                wrapperClassName=""
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <ul
                      className="ant-list-items"
                    >
                      <Item>
                        <li
                          className="ant-list-item"
                        >
                          <p>
                            <Text
                              strong={true}
                            >
                              <ForwardRef
                                component="span"
                                strong={true}
                              >
                                <ResizeObserver
                                  disabled={true}
                                  onResize={[Function]}
                                >
                                  <SingleObserver
                                    disabled={true}
                                    key="rc-observer-key-0"
                                    onResize={[Function]}
                                  >
                                    <DomWrapper>
                                      <EllipsisTooltip
                                        enabledEllipsis={false}
                                        isEllipsis={false}
                                      >
                                        <Typography
                                          className=""
                                          component="span"
                                          onClick={null}
                                          style={
                                            Object {
                                              "WebkitLineClamp": undefined,
                                            }
                                          }
                                        >
                                          <span
                                            className="ant-typography"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <Ellipsis
                                              enabledMeasure={false}
                                              onEllipsis={[Function]}
                                              rows={1}
                                              text={2002}
                                              width={0}
                                            >
                                              <strong>
                                                2002
                                              </strong>
                                            </Ellipsis>
                                          </span>
                                        </Typography>
                                      </EllipsisTooltip>
                                    </DomWrapper>
                                  </SingleObserver>
                                </ResizeObserver>
                              </ForwardRef>
                            </Text>
                             
                             MIT / POIT
                          </p>
                        </li>
                      </Item>
                    </ul>
                  </div>
                </div>
              </Spin>
            </div>
          </List>
        </div>
      </div>
    </ForwardRef>
  </CommonCard>
</EducationCard>
`;

exports[`EducationCard Should render correctly if editing mode is enabled 1`] = `
<EducationCard
  data={
    Object {
      "educationHistory": Array [
        Object {
          "faculty": "POIT",
          "graduationYear": 2002,
          "university": "MIT",
        },
      ],
    }
  }
  isEditingModeEnabled={true}
  onPermissionsSettingsChange={[MockFunction]}
  onProfileSettingsChange={[MockFunction]}
>
  <CommonCard
    content={
      <List
        dataSource={
          Array [
            Object {
              "faculty": "POIT",
              "graduationYear": 2002,
              "university": "MIT",
            },
          ]
        }
        itemLayout="horizontal"
        renderItem={[Function]}
      />
    }
    icon={<ForwardRef(ReadOutlined) />}
    isEditingModeEnabled={true}
    noDataDescrption="Education history isn't filled in"
    onPermissionsSettingsChange={[MockFunction]}
    profileSettingsContent={
      <React.Fragment>
        <List
          dataSource={
            Array [
              Object {
                "faculty": "POIT",
                "graduationYear": 2002,
                "university": "MIT",
              },
            ]
          }
          itemLayout="horizontal"
          renderItem={[Function]}
        />
        <Button
          onClick={[Function]}
          style={
            Object {
              "width": "100%",
            }
          }
          type="dashed"
        >
          <ForwardRef(FileAddOutlined) />
           Add new university
        </Button>
      </React.Fragment>
    }
    title="Education"
  >
    <ForwardRef
      actions={
        Array [
          <ForwardRef(EditOutlined)
            onClick={[Function]}
          />,
        ]
      }
      title={
        <Title
          ellipsis={true}
          level={2}
          style={
            Object {
              "fontSize": 16,
              "marginBottom": 0,
            }
          }
        >
          <ForwardRef(ReadOutlined) />
           
          Education
        </Title>
      }
    >
      <div
        className="ant-card ant-card-bordered"
      >
        <div
          className="ant-card-head"
          style={Object {}}
        >
          <div
            className="ant-card-head-wrapper"
          >
            <div
              className="ant-card-head-title"
            >
              <Title
                ellipsis={true}
                level={2}
                style={
                  Object {
                    "fontSize": 16,
                    "marginBottom": 0,
                  }
                }
              >
                <ForwardRef
                  component="h2"
                  ellipsis={true}
                  style={
                    Object {
                      "fontSize": 16,
                      "marginBottom": 0,
                    }
                  }
                >
                  <ResizeObserver
                    disabled={true}
                    onResize={[Function]}
                  >
                    <SingleObserver
                      disabled={true}
                      key="rc-observer-key-0"
                      onResize={[Function]}
                    >
                      <DomWrapper>
                        <EllipsisTooltip
                          enabledEllipsis={true}
                          isEllipsis={false}
                        >
                          <Typography
                            className="ant-typography-ellipsis ant-typography-single-line ant-typography-ellipsis-single-line"
                            component="h2"
                            onClick={null}
                            style={
                              Object {
                                "WebkitLineClamp": undefined,
                                "fontSize": 16,
                                "marginBottom": 0,
                              }
                            }
                          >
                            <h2
                              className="ant-typography ant-typography-ellipsis ant-typography-single-line ant-typography-ellipsis-single-line"
                              onClick={null}
                              style={
                                Object {
                                  "WebkitLineClamp": undefined,
                                  "fontSize": 16,
                                  "marginBottom": 0,
                                }
                              }
                            >
                              <Ellipsis
                                enabledMeasure={false}
                                onEllipsis={[Function]}
                                rows={1}
                                text={
                                  Array [
                                    <ForwardRef(ReadOutlined) />,
                                    " ",
                                    "Education",
                                  ]
                                }
                                width={0}
                              >
                                <ForwardRef(ReadOutlined)>
                                  <AntdIcon
                                    icon={
                                      Object {
                                        "icon": Object {
                                          "attrs": Object {
                                            "focusable": "false",
                                            "viewBox": "64 64 896 896",
                                          },
                                          "children": Array [
                                            Object {
                                              "attrs": Object {
                                                "d": "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z",
                                              },
                                              "tag": "path",
                                            },
                                          ],
                                          "tag": "svg",
                                        },
                                        "name": "read",
                                        "theme": "outlined",
                                      }
                                    }
                                  >
                                    <span
                                      aria-label="read"
                                      className="anticon anticon-read"
                                      role="img"
                                    >
                                      <IconReact
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "read",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden="true"
                                          data-icon="read"
                                          fill="currentColor"
                                          focusable="false"
                                          height="1em"
                                          key="svg-read"
                                          viewBox="64 64 896 896"
                                          width="1em"
                                        >
                                          <path
                                            d="M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z"
                                            key="svg-read-svg-0"
                                          />
                                        </svg>
                                      </IconReact>
                                    </span>
                                  </AntdIcon>
                                </ForwardRef(ReadOutlined)>
                                 
                                Education
                              </Ellipsis>
                            </h2>
                          </Typography>
                        </EllipsisTooltip>
                      </DomWrapper>
                    </SingleObserver>
                  </ResizeObserver>
                </ForwardRef>
              </Title>
            </div>
          </div>
        </div>
        <div
          className="ant-card-body"
          style={Object {}}
        >
          <List
            dataSource={
              Array [
                Object {
                  "faculty": "POIT",
                  "graduationYear": 2002,
                  "university": "MIT",
                },
              ]
            }
            itemLayout="horizontal"
            renderItem={[Function]}
          >
            <div
              className="ant-list ant-list-split"
            >
              <Spin
                size="default"
                spinning={false}
                wrapperClassName=""
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <ul
                      className="ant-list-items"
                    >
                      <Item>
                        <li
                          className="ant-list-item"
                        >
                          <p>
                            <Text
                              strong={true}
                            >
                              <ForwardRef
                                component="span"
                                strong={true}
                              >
                                <ResizeObserver
                                  disabled={true}
                                  onResize={[Function]}
                                >
                                  <SingleObserver
                                    disabled={true}
                                    key="rc-observer-key-0"
                                    onResize={[Function]}
                                  >
                                    <DomWrapper>
                                      <EllipsisTooltip
                                        enabledEllipsis={false}
                                        isEllipsis={false}
                                      >
                                        <Typography
                                          className=""
                                          component="span"
                                          onClick={null}
                                          style={
                                            Object {
                                              "WebkitLineClamp": undefined,
                                            }
                                          }
                                        >
                                          <span
                                            className="ant-typography"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <Ellipsis
                                              enabledMeasure={false}
                                              onEllipsis={[Function]}
                                              rows={1}
                                              text={2002}
                                              width={0}
                                            >
                                              <strong>
                                                2002
                                              </strong>
                                            </Ellipsis>
                                          </span>
                                        </Typography>
                                      </EllipsisTooltip>
                                    </DomWrapper>
                                  </SingleObserver>
                                </ResizeObserver>
                              </ForwardRef>
                            </Text>
                             
                             MIT / POIT
                          </p>
                        </li>
                      </Item>
                    </ul>
                  </div>
                </div>
              </Spin>
            </div>
          </List>
          <PermissionsSettingsDrawer
            hideSettings={[Function]}
            isSettingsVisible={false}
            onPermissionsSettingsChange={[MockFunction]}
          >
            <DrawerWrapper
              closable={true}
              getContainer={false}
              onClose={[Function]}
              placement="top"
              style={
                Object {
                  "display": "none",
                  "position": "absolute",
                }
              }
              title="Visibility settings"
              visible={false}
            >
              <Drawer
                closable={true}
                getContainer={false}
                onClose={[Function]}
                placement="top"
                prefixCls="ant-drawer"
                style={
                  Object {
                    "display": "none",
                    "position": "absolute",
                  }
                }
                title="Visibility settings"
                visible={false}
              >
                <DrawerWrapper
                  afterVisibleChange={[Function]}
                  autoFocus={true}
                  className=""
                  defaultOpen={false}
                  duration=".3s"
                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                  forceRender={false}
                  getContainer={false}
                  handler={false}
                  height={378}
                  keyboard={true}
                  level={null}
                  maskClosable={true}
                  maskStyle={Object {}}
                  onChange={[Function]}
                  onClose={[Function]}
                  open={false}
                  placement="top"
                  prefixCls="ant-drawer"
                  showMask={true}
                  style={
                    Object {
                      "display": "none",
                      "position": "absolute",
                      "transform": undefined,
                      "zIndex": undefined,
                    }
                  }
                  wrapperClassName=""
                >
                  <div
                    className=""
                  >
                    <DrawerChild
                      afterVisibleChange={[Function]}
                      autoFocus={true}
                      className=""
                      duration=".3s"
                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                      getContainer={[Function]}
                      handler={false}
                      height={378}
                      keyboard={true}
                      level={null}
                      maskClosable={true}
                      maskStyle={Object {}}
                      onChange={[Function]}
                      onClose={[Function]}
                      onHandleClick={[Function]}
                      open={false}
                      placement="top"
                      prefixCls="ant-drawer"
                      showMask={true}
                      style={
                        Object {
                          "display": "none",
                          "position": "absolute",
                          "transform": undefined,
                          "zIndex": undefined,
                        }
                      }
                    >
                      <div
                        className="ant-drawer ant-drawer-top"
                        onTransitionEnd={[Function]}
                        style={
                          Object {
                            "display": "none",
                            "position": "absolute",
                            "transform": undefined,
                            "zIndex": undefined,
                          }
                        }
                        tabIndex={-1}
                      >
                        <div
                          className="ant-drawer-mask"
                          onClick={[Function]}
                          style={Object {}}
                        />
                        <div
                          className="ant-drawer-content-wrapper"
                          style={
                            Object {
                              "height": "378px",
                              "msTransform": "translateY(-100%)",
                              "transform": "translateY(-100%)",
                              "width": undefined,
                            }
                          }
                        >
                          <div
                            className="ant-drawer-content"
                          >
                            <div
                              className="ant-drawer-wrapper-body"
                              onTransitionEnd={[Function]}
                              style={Object {}}
                            >
                              <div
                                className="ant-drawer-header"
                              >
                                <div
                                  className="ant-drawer-header-title"
                                >
                                  <button
                                    aria-label="Close"
                                    className="ant-drawer-close"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ForwardRef(CloseOutlined)>
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "close",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="close"
                                          className="anticon anticon-close"
                                          role="img"
                                        >
                                          <IconReact
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "close",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              data-icon="close"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-close"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                key="svg-close-svg-0"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(CloseOutlined)>
                                  </button>
                                  <div
                                    className="ant-drawer-title"
                                  >
                                    Visibility settings
                                  </div>
                                </div>
                              </div>
                              <div
                                className="ant-drawer-body"
                              >
                                <List
                                  dataSource={Array []}
                                  itemLayout="horizontal"
                                  renderItem={[Function]}
                                >
                                  <div
                                    className="ant-list ant-list-split"
                                  >
                                    <Spin
                                      size="default"
                                      spinning={false}
                                      wrapperClassName=""
                                    >
                                      <div
                                        className="ant-spin-nested-loading"
                                      >
                                        <div
                                          className="ant-spin-container"
                                          key="container"
                                        >
                                          <div
                                            className="ant-list-empty-text"
                                          >
                                            <Empty
                                              image={<Simple />}
                                            >
                                              <LocaleReceiver
                                                componentName="Empty"
                                              >
                                                <div
                                                  className="ant-empty ant-empty-normal"
                                                >
                                                  <div
                                                    className="ant-empty-image"
                                                  >
                                                    <Simple>
                                                      <svg
                                                        className="ant-empty-img-simple"
                                                        height="41"
                                                        viewBox="0 0 64 41"
                                                        width="64"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <g
                                                          fill="none"
                                                          fillRule="evenodd"
                                                          transform="translate(0 1)"
                                                        >
                                                          <ellipse
                                                            className="ant-empty-img-simple-ellipse"
                                                            cx="32"
                                                            cy="33"
                                                            rx="32"
                                                            ry="7"
                                                          />
                                                          <g
                                                            className="ant-empty-img-simple-g"
                                                            fillRule="nonzero"
                                                          >
                                                            <path
                                                              d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                            />
                                                            <path
                                                              className="ant-empty-img-simple-path"
                                                              d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                            />
                                                          </g>
                                                        </g>
                                                      </svg>
                                                    </Simple>
                                                  </div>
                                                  <div
                                                    className="ant-empty-description"
                                                  >
                                                    No Data
                                                  </div>
                                                </div>
                                              </LocaleReceiver>
                                            </Empty>
                                          </div>
                                        </div>
                                      </div>
                                    </Spin>
                                  </div>
                                </List>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </DrawerChild>
                  </div>
                </DrawerWrapper>
              </Drawer>
            </DrawerWrapper>
            <style
              jsx={true}
            >
              
        :global(.ant-drawer-content-wrapper) {
          height: inherit !important;
        }

        :global(.ant-drawer-wrapper-body) {
          overflow: hidden;
        }

        :global(.ant-drawer-body) {
          height: calc(100% - 55px);
          overflow: auto;
        }
      
            </style>
          </PermissionsSettingsDrawer>
          <ProfileSettingsDrawer
            content={
              <React.Fragment>
                <List
                  dataSource={
                    Array [
                      Object {
                        "faculty": "POIT",
                        "graduationYear": 2002,
                        "university": "MIT",
                      },
                    ]
                  }
                  itemLayout="horizontal"
                  renderItem={[Function]}
                />
                <Button
                  onClick={[Function]}
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                  type="dashed"
                >
                  <ForwardRef(FileAddOutlined) />
                   Add new university
                </Button>
              </React.Fragment>
            }
            hideSettings={[Function]}
            isSettingsVisible={false}
          >
            <DrawerWrapper
              closable={true}
              getContainer={false}
              onClose={[Function]}
              placement="top"
              style={
                Object {
                  "display": "none",
                  "position": "absolute",
                }
              }
              title="Profile settings"
              visible={false}
            >
              <Drawer
                closable={true}
                getContainer={false}
                onClose={[Function]}
                placement="top"
                prefixCls="ant-drawer"
                style={
                  Object {
                    "display": "none",
                    "position": "absolute",
                  }
                }
                title="Profile settings"
                visible={false}
              >
                <DrawerWrapper
                  afterVisibleChange={[Function]}
                  autoFocus={true}
                  className=""
                  defaultOpen={false}
                  duration=".3s"
                  ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                  forceRender={false}
                  getContainer={false}
                  handler={false}
                  height={378}
                  keyboard={true}
                  level={null}
                  maskClosable={true}
                  maskStyle={Object {}}
                  onChange={[Function]}
                  onClose={[Function]}
                  open={false}
                  placement="top"
                  prefixCls="ant-drawer"
                  showMask={true}
                  style={
                    Object {
                      "display": "none",
                      "position": "absolute",
                      "transform": undefined,
                      "zIndex": undefined,
                    }
                  }
                  wrapperClassName=""
                >
                  <div
                    className=""
                  >
                    <DrawerChild
                      afterVisibleChange={[Function]}
                      autoFocus={true}
                      className=""
                      duration=".3s"
                      ease="cubic-bezier(0.78, 0.14, 0.15, 0.86)"
                      getContainer={[Function]}
                      handler={false}
                      height={378}
                      keyboard={true}
                      level={null}
                      maskClosable={true}
                      maskStyle={Object {}}
                      onChange={[Function]}
                      onClose={[Function]}
                      onHandleClick={[Function]}
                      open={false}
                      placement="top"
                      prefixCls="ant-drawer"
                      showMask={true}
                      style={
                        Object {
                          "display": "none",
                          "position": "absolute",
                          "transform": undefined,
                          "zIndex": undefined,
                        }
                      }
                    >
                      <div
                        className="ant-drawer ant-drawer-top"
                        onTransitionEnd={[Function]}
                        style={
                          Object {
                            "display": "none",
                            "position": "absolute",
                            "transform": undefined,
                            "zIndex": undefined,
                          }
                        }
                        tabIndex={-1}
                      >
                        <div
                          className="ant-drawer-mask"
                          onClick={[Function]}
                          style={Object {}}
                        />
                        <div
                          className="ant-drawer-content-wrapper"
                          style={
                            Object {
                              "height": "378px",
                              "msTransform": "translateY(-100%)",
                              "transform": "translateY(-100%)",
                              "width": undefined,
                            }
                          }
                        >
                          <div
                            className="ant-drawer-content"
                          >
                            <div
                              className="ant-drawer-wrapper-body"
                              onTransitionEnd={[Function]}
                              style={Object {}}
                            >
                              <div
                                className="ant-drawer-header"
                              >
                                <div
                                  className="ant-drawer-header-title"
                                >
                                  <button
                                    aria-label="Close"
                                    className="ant-drawer-close"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ForwardRef(CloseOutlined)>
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "close",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="close"
                                          className="anticon anticon-close"
                                          role="img"
                                        >
                                          <IconReact
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "close",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              data-icon="close"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-close"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                key="svg-close-svg-0"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(CloseOutlined)>
                                  </button>
                                  <div
                                    className="ant-drawer-title"
                                  >
                                    Profile settings
                                  </div>
                                </div>
                              </div>
                              <div
                                className="ant-drawer-body"
                              >
                                <List
                                  dataSource={
                                    Array [
                                      Object {
                                        "faculty": "POIT",
                                        "graduationYear": 2002,
                                        "university": "MIT",
                                      },
                                    ]
                                  }
                                  itemLayout="horizontal"
                                  renderItem={[Function]}
                                >
                                  <div
                                    className="ant-list ant-list-split"
                                  >
                                    <Spin
                                      size="default"
                                      spinning={false}
                                      wrapperClassName=""
                                    >
                                      <div
                                        className="ant-spin-nested-loading"
                                      >
                                        <div
                                          className="ant-spin-container"
                                          key="container"
                                        >
                                          <ul
                                            className="ant-list-items"
                                          >
                                            <Item>
                                              <li
                                                className="ant-list-item"
                                              >
                                                <div
                                                  style={
                                                    Object {
                                                      "width": "100%",
                                                    }
                                                  }
                                                >
                                                  <p
                                                    style={
                                                      Object {
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    <Text
                                                      strong={true}
                                                    >
                                                      <ForwardRef
                                                        component="span"
                                                        strong={true}
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <SingleObserver
                                                            disabled={true}
                                                            key="rc-observer-key-0"
                                                            onResize={[Function]}
                                                          >
                                                            <DomWrapper>
                                                              <EllipsisTooltip
                                                                enabledEllipsis={false}
                                                                isEllipsis={false}
                                                              >
                                                                <Typography
                                                                  className=""
                                                                  component="span"
                                                                  onClick={null}
                                                                  style={
                                                                    Object {
                                                                      "WebkitLineClamp": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-typography"
                                                                    onClick={null}
                                                                    style={
                                                                      Object {
                                                                        "WebkitLineClamp": undefined,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Ellipsis
                                                                      enabledMeasure={false}
                                                                      onEllipsis={[Function]}
                                                                      rows={1}
                                                                      text={2002}
                                                                      width={0}
                                                                    >
                                                                      <strong>
                                                                        2002
                                                                      </strong>
                                                                    </Ellipsis>
                                                                  </span>
                                                                </Typography>
                                                              </EllipsisTooltip>
                                                            </DomWrapper>
                                                          </SingleObserver>
                                                        </ResizeObserver>
                                                      </ForwardRef>
                                                    </Text>
                                                     
                                                    MIT / POIT
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <Button
                                                      onClick={[Function]}
                                                      size="small"
                                                      type="dashed"
                                                    >
                                                      <Wave
                                                        disabled={false}
                                                      >
                                                        <button
                                                          className="ant-btn ant-btn-dashed ant-btn-sm"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <ForwardRef(DeleteOutlined)
                                                            key=".0"
                                                          >
                                                            <AntdIcon
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "delete",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="delete"
                                                                className="anticon anticon-delete"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "delete",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    data-icon="delete"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-delete"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                      key="svg-delete-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DeleteOutlined)>
                                                          <span
                                                            key=".1"
                                                          >
                                                             Delete
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    <Text
                                                      strong={true}
                                                    >
                                                      <ForwardRef
                                                        component="span"
                                                        strong={true}
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <SingleObserver
                                                            disabled={true}
                                                            key="rc-observer-key-0"
                                                            onResize={[Function]}
                                                          >
                                                            <DomWrapper>
                                                              <EllipsisTooltip
                                                                enabledEllipsis={false}
                                                                isEllipsis={false}
                                                              >
                                                                <Typography
                                                                  className=""
                                                                  component="span"
                                                                  onClick={null}
                                                                  style={
                                                                    Object {
                                                                      "WebkitLineClamp": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-typography"
                                                                    onClick={null}
                                                                    style={
                                                                      Object {
                                                                        "WebkitLineClamp": undefined,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Ellipsis
                                                                      enabledMeasure={false}
                                                                      onEllipsis={[Function]}
                                                                      rows={1}
                                                                      text="University:"
                                                                      width={0}
                                                                    >
                                                                      <strong>
                                                                        University:
                                                                      </strong>
                                                                    </Ellipsis>
                                                                  </span>
                                                                </Typography>
                                                              </EllipsisTooltip>
                                                            </DomWrapper>
                                                          </SingleObserver>
                                                        </ResizeObserver>
                                                      </ForwardRef>
                                                    </Text>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                      value="MIT"
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value="MIT"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                              type="text"
                                                              value="MIT"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value="MIT"
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            type="text"
                                                            value="MIT"
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    <Text
                                                      strong={true}
                                                    >
                                                      <ForwardRef
                                                        component="span"
                                                        strong={true}
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <SingleObserver
                                                            disabled={true}
                                                            key="rc-observer-key-0"
                                                            onResize={[Function]}
                                                          >
                                                            <DomWrapper>
                                                              <EllipsisTooltip
                                                                enabledEllipsis={false}
                                                                isEllipsis={false}
                                                              >
                                                                <Typography
                                                                  className=""
                                                                  component="span"
                                                                  onClick={null}
                                                                  style={
                                                                    Object {
                                                                      "WebkitLineClamp": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-typography"
                                                                    onClick={null}
                                                                    style={
                                                                      Object {
                                                                        "WebkitLineClamp": undefined,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Ellipsis
                                                                      enabledMeasure={false}
                                                                      onEllipsis={[Function]}
                                                                      rows={1}
                                                                      text="Faculty"
                                                                      width={0}
                                                                    >
                                                                      <strong>
                                                                        Faculty
                                                                      </strong>
                                                                    </Ellipsis>
                                                                  </span>
                                                                </Typography>
                                                              </EllipsisTooltip>
                                                            </DomWrapper>
                                                          </SingleObserver>
                                                        </ResizeObserver>
                                                      </ForwardRef>
                                                    </Text>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                      value="POIT"
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value="POIT"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                              type="text"
                                                              value="POIT"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value="POIT"
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            type="text"
                                                            value="POIT"
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 5,
                                                      }
                                                    }
                                                  >
                                                    <Text
                                                      strong={true}
                                                    >
                                                      <ForwardRef
                                                        component="span"
                                                        strong={true}
                                                      >
                                                        <ResizeObserver
                                                          disabled={true}
                                                          onResize={[Function]}
                                                        >
                                                          <SingleObserver
                                                            disabled={true}
                                                            key="rc-observer-key-0"
                                                            onResize={[Function]}
                                                          >
                                                            <DomWrapper>
                                                              <EllipsisTooltip
                                                                enabledEllipsis={false}
                                                                isEllipsis={false}
                                                              >
                                                                <Typography
                                                                  className=""
                                                                  component="span"
                                                                  onClick={null}
                                                                  style={
                                                                    Object {
                                                                      "WebkitLineClamp": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-typography"
                                                                    onClick={null}
                                                                    style={
                                                                      Object {
                                                                        "WebkitLineClamp": undefined,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Ellipsis
                                                                      enabledMeasure={false}
                                                                      onEllipsis={[Function]}
                                                                      rows={1}
                                                                      text="Graduation year:"
                                                                      width={0}
                                                                    >
                                                                      <strong>
                                                                        Graduation year:
                                                                      </strong>
                                                                    </Ellipsis>
                                                                  </span>
                                                                </Typography>
                                                              </EllipsisTooltip>
                                                            </DomWrapper>
                                                          </SingleObserver>
                                                        </ResizeObserver>
                                                      </ForwardRef>
                                                    </Text>
                                                  </p>
                                                  <p
                                                    style={
                                                      Object {
                                                        "fontSize": 18,
                                                        "marginBottom": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                      value={2002}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value={2002}
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                              type="text"
                                                              value={2002}
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value="2002"
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            type="text"
                                                            value="2002"
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </p>
                                                </div>
                                              </li>
                                            </Item>
                                          </ul>
                                        </div>
                                      </div>
                                    </Spin>
                                  </div>
                                </List>
                                <Button
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                  type="dashed"
                                >
                                  <Wave
                                    disabled={false}
                                  >
                                    <button
                                      className="ant-btn ant-btn-dashed"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "width": "100%",
                                        }
                                      }
                                      type="button"
                                    >
                                      <LoadingIcon
                                        existIcon={false}
                                        loading={false}
                                        prefixCls="ant-btn"
                                      >
                                        <CSSMotion
                                          motionName="ant-btn-loading-icon-motion"
                                          onAppearActive={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </LoadingIcon>
                                      <ForwardRef(FileAddOutlined)
                                        key=".0"
                                      >
                                        <AntdIcon
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "file-add",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <span
                                            aria-label="file-add"
                                            className="anticon anticon-file-add"
                                            role="img"
                                          >
                                            <IconReact
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "file-add",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                data-icon="file-add"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-file-add"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM544 472c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v108H372c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h108v108c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V644h108c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V472z"
                                                  key="svg-file-add-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </span>
                                        </AntdIcon>
                                      </ForwardRef(FileAddOutlined)>
                                      <span
                                        key=".1"
                                      >
                                         Add new university
                                      </span>
                                    </button>
                                  </Wave>
                                </Button>
                                <style
                                  jsx={true}
                                >
                                  
              :global(.ant-drawer-content-wrapper) {
                height: inherit !important;
              }

              :global(.ant-drawer-wrapper-body) {
                overflow: hidden;
              }

              :global(.ant-drawer-body) {
                height: calc(100% - 55px);
                overflow: auto;
              }
            
                                </style>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </DrawerChild>
                  </div>
                </DrawerWrapper>
              </Drawer>
            </DrawerWrapper>
          </ProfileSettingsDrawer>
        </div>
        <ul
          className="ant-card-actions"
        >
          <li
            key="action-0"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <span>
              <ForwardRef(EditOutlined)
                key="main-card-actions-edit"
                onClick={[Function]}
              >
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {
                              "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "edit",
                      "theme": "outlined",
                    }
                  }
                  onClick={[Function]}
                >
                  <span
                    aria-label="edit"
                    className="anticon anticon-edit"
                    onClick={[Function]}
                    role="img"
                    tabIndex={-1}
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {
                                  "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "edit",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="edit"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-edit"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"
                          key="svg-edit-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(EditOutlined)>
            </span>
          </li>
        </ul>
      </div>
    </ForwardRef>
  </CommonCard>
</EducationCard>
`;

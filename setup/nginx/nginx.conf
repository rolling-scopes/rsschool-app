user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

  map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
  }

  upstream client_target {
    server client:8080;
  }

  upstream server_target {
    server server:8080;
  }

  upstream nestjs_target {
    server nestjs:8080;
  }

  default_type application/octet-stream;

  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  access_log off;
  open_file_cache max=100;
  client_max_body_size 50m;
  proxy_read_timeout 120s;
  proxy_send_timeout 120s;

  server {
    listen 8080;
    server_name app.rs.school;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/app.rs.school/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.rs.school/privkey.pem;

    server_name app.rs.school;

    keepalive_timeout 300;

    server_tokens off;
    etag off;
    expires $expires;

    gzip  on;
    gzip_comp_level 5;
    gzip_min_length 1100;
    gzip_buffers    16 32k;
    gzip_proxied any;
    gzip_types
      text/css
      text/javascript
      text/xml
      text/plain
      text/x-component
      application/json
      application/javascript
      application/xml
      application/rss+xml
      font/truetype
      font/opentype
      application/vnd.ms-fontobject
      image/svg+xml;

    gzip_static on;
    gzip_vary   on;

    add_header X-Request-Time $request_time;

    location /api/ {
      rewrite ^(.*)\/api(\/.+)$ $1$2 break;
      proxy_pass http://server_target;
    }

    location /api/v2/ {
      proxy_cache nestjs_cache;
      rewrite ^(.*)\/api/v2(\/.+)$ $1$2 break;
      proxy_pass http://nestjs_target;
    }

    location /certificate/ {
      proxy_pass http://server_target;
    }

    location / {
      proxy_pass http://client_target;
    }
  }
}
